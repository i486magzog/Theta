/* You can add global styles to this file, and also import other style files */

:root {
  --swiper-navigation-size: 44px;
  --swiper-theme-color: #007aff;
  --theta-red: #ec393b;
  --black: #0e212b;
  --white: white;
  --smoke: #f8f5f5;
  --theta-red-darker: #cf2c2d;
  --theta-teal: #0697b5;
  --black-3: #091820;
  --black-2: #181d20;
  --maroon: #501213;
  --silver: #b2b7ba;
  --black-4: #09161d;
  --hf-chatbox-bgcolor: #ffffff;
  --hf-brand-color: #fa6d4b;
  --hf-brand-text-color: #ffffff;
  --hf-brand-text-color-rgb: 255, 255, 255;
  --hf-watermark-color: #dbdee1;
  --hf-header-height: 59px;
  --hf-chatbox-height: 560px;
  --hf-suggestedaction-height: 40px;
  --hf-watermark-height: 25px;
  --hf-inputbox-height: 50px;
  --hf-bot-msg-icon-width: 32px;
  --hf-bot-msg-color: rgb(51, 51, 51);
  --hf-bot-msg-bgcolor: rgb(241, 241, 241);
  --hf-bot-msg-link-color: #660093;
  --hf-bot-msg-btn-color: #660093;
  --hf-bot-msg-btn-bgcolor: white;
  --hf-btn-neutral-color: #120F8D;
  --hf-btn-neutral-bgcolor: white;
  --hf-callout-msg-link-color: #660093;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/proximanova_black.ttf') format('truetype');
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/proximanova_extrabold.otf') format('opentype');
  font-weight: 800;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/proximanova_bold.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/proximanova_light.otf') format('opentype');
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/proximanova_regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Icomoon';
  src: url('https://cdn.prod.website-files.com/60fa9ed33ad004f9b8043979/679c2d677f96c23ec68238db_icomoon.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
  height: 100%;
}

body {
  font-family: 'Proxima Nova', sans-serif;
  color: var(--black);
  font-size: 18px;
  font-weight: 400;
  line-height: 1;
  overflow-x: clip;
}

h2 {
  margin-top: 20px;
  margin-bottom: 10px;
  font-size: 3.4rem;
  font-weight: 700;
  line-height: 1;
}

h4 {
  margin-top: 10px;
  margin-bottom: 10px;
  font-size: 1.3rem;
  font-weight: 700;
  line-height: 1.4;
}

@media screen and (min-width: 1920px) {
  h2 {
    font-size: 4rem;
    line-height: 1.1;
  }

}

@media screen and (min-width: 1440px) {
  h2, h3 {
    line-height: 1.2;
  }
}

a {
  cursor: pointer;
}

p {
  opacity: .85;
  margin-bottom: 10px;
  font-family: proxima-nova, sans-serif;
  line-height: 1.45;
}

.divider {
  background-color: var(--theta-red);
  border-radius: 10px;
  width: 60px;
  height: 7px;
  margin-top: 10px;
  margin-bottom: 10px;
  display: inline-block;
}

.arrow-link {
  color: var(--theta-red);
  padding-top: .5rem;
  padding-bottom: .5rem;
  font-size: 1.3rem;
  font-weight: 900;
  text-decoration: none;
  transition: all .2s;
  display: flex;
  align-items: center;
  margin-top: 2rem;
}
  .arrow-link:hover {
    color: var(--theta-red-darker);
  }

.arrow-holder {
  overflow: hidden;
  width: 100px;
  margin-left: 10px;
}
.icon {
  font-family: Icomoon, Arial, sans-serif;
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

.icon.arrow-icon {
  font-size: .8em;
}

  .icon.arrow-icon.arrow-link-icon {
    margin-top: 5px;
    font-size: .5em;
    width: 100%;
    transform: translate3d(-40%, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    transform-style: preserve-3d;
    transition: all .2s;
  }

.arrow-link:hover .icon.arrow-icon.arrow-link-icon {
  transform: translate(-20%);
}

img {
  vertical-align: middle;
  max-width: 100%;
  display: inline-block;
}

[parallax] {
  transition: transform .8s linear;
  will-change: transform;
}

[parallax-mouse] {
  transition: transform 1s linear;
  will-change: transform;
}